@inject IHttpContextAccessor ContextAccessor
@model csharp_minitwit.Models.UserTimelineViewModel;
@using csharp_minitwit.Utils;
@{
    Layout = "~/Views/Home/Layout.cshtml";
    ViewData["Title"] = "Timeline";
    var actionName = ViewContext.RouteData.Values["action"].ToString();
}

<h2>
    
    @{
        if (actionName== "PublicTimeline")
        {
            <text>Public Timeline</text>
        }
        else if (actionName == "UserTimeline")
        {
            <text>@Model.profileUser.username's Timeline</text>
        }
        else
        {
            <text>My Timeline</text>
        }
    }
</h2>

<pre>
    currentUserId: @Model.currentUserId
    profile user id: @Model.profileUser.user_id
    @Model.followed
    @actionName
    @{var msg = Model.messages.Last().Email;}
    @msg
</pre>

@if (Model.currentUserId.HasValue)
{
    @if (actionName == "userTimeline")
    {
        <div class="followstatus">
            @using System.Security.Claims

            @if (Model.currentUserId == Model.profileUser.user_id)
            {
                <text>This is you!</text>
            }
            else if (Model.followed)
            {
                <text>You are currently following this user.
                    <a class="unfollow" href="@Url.Action("UnfollowUser", new { username = Model.profileUser.username })">Unfollow user</a>.
                </text>
            }
            else
            {
                <text>You are not yet following this user.
                    <a class="follow" href="@Url.Action("FollowUser", new { username = Model.profileUser.username })">Follow user</a>.
                </text>
            }
        </div>
    }
    else if (actionName == "Timeline")
    {
        <div class="twitbox">
            <h3>What's on your mind @User.Identity.Name?</h3>
            <form asp-action="AddMessage" method="post">
                <p><input type="text" name="text" size="60" /><!--
                    --><input type="submit" value="Share" /></p>
            </form>
        </div>
    }
}

<ul class="messages">
    @foreach (var message in Model.messages)
    {
            var gravatarUrl = GravatarHelper.GetGravatarUrl(message.Email, 48);
        <li>
            <img src="@gravatarUrl" alt="Gravatar">
            <p>
                <strong><a href="@Url.Action("UserTimeline", new { username = message.Username })">@message.Username</a></strong>
                @message.Text
                <small>&mdash; @DateTimeOffset.FromUnixTimeSeconds(message.PubDate).ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")</small>
            </p>
        </li>
    }
</ul>
